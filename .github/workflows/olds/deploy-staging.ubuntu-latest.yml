name: ðŸš€ Deploy as a Staging Environment | Dellbuntu

on:
  push:
    branches:
      - staging

permissions:
  actions: write
  contents: read

env:
  ORIGIN_SERVER_NAME: 'justdemo.work'
  PROJECT_NAME: 'sundate'
  IMAGE_NAME_API: 'api'
  IMAGE_NAME_DOCS: 'docs'
  BASE_API_URL: '/api'
  NGINX_PORT: 88

jobs:
  # =========================
  # 1. Build & Push API Image
  # =========================
  build-api:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create api .env
        run: |
          mkdir -p apps/api
          cat <<EOF > apps/api/.env
          MONGO_URI=${{ env.MONGO_URI }}
          BASE_API_URL=${{ env.BASE_API_URL }}
          JWT_SECRET=${{ env.JWT_SECRET }}
          JWT_REFRESH_SECRET=${{ env.JWT_REFRESH_SECRET }}
          EOF

      - name: Log in to dellbuntu registry
        run: echo "${{ secrets.DELLBUNTU_REGISTRY_PASSWORD }}" | docker login ${{ secrets.DELLBUNTU_HOST }}:5000 -u ${{ secrets.DELLBUNTU_REGISTRY_USER }} --password-stdin

      - name: Build & Push API image
        run: |
          docker-compose -f docker-compose.api.yml build api
          docker tag sundate-api:latest ${{ secrets.DELLBUNTU_HOST }}:5000/${{ env.PROJECT_NAME }}/${{ env.IMAGE_NAME_API }}:staging
          docker push ${{ secrets.DELLBUNTU_HOST }}:5000/${{ env.PROJECT_NAME }}/${{ env.IMAGE_NAME_API }}:staging

  # ======================
  # 2. Deploy on dellbuntu
  # ======================
  deploy-api:
    runs-on: [self-hosted, dellbuntu]
    needs: build-api
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
      BASE_API_URL: '/api'
      NGINX_PORT: 88
    steps:
      - uses: actions/checkout@v4

      - name: Fix permissions (if needed)
        run: |
          sudo chown -R gh-runner:gh-runner $GITHUB_WORKSPACE
          sudo chmod -R u+rwX $GITHUB_WORKSPACE

      - name: Create api .env
        run: |
          mkdir -p apps/api
          cat <<EOF > apps/api/.env
          MONGO_URI=${{ env.MONGO_URI }}
          BASE_API_URL=${{ env.BASE_API_URL }}
          JWT_SECRET=${{ env.JWT_SECRET }}
          JWT_REFRESH_SECRET=${{ env.JWT_REFRESH_SECRET }}
          EOF

      - name: Create nginx .env
        run: |
          mkdir -p nginx
          cat <<EOF > nginx/.env
          NGINX_PORT=${{ env.NGINX_PORT }}
          NGINX_DOMAIN=${{ env.PROJECT_NAME }}.${{ env.ORIGIN_SERVER_NAME }}
          EOF

      - name: Pull & Deploy
        run: |
          docker-compose -f docker-compose.api.yml pull api
          docker-compose -f docker-compose.api.yml up -d
