version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: sundate-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: sundate-cafe
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - sundate-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: sundate-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5001
      MONGO_URI: mongodb://admin:password123@mongodb:27017/sundate-cafe?authSource=admin
    ports:
      - "5001:5001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - sundate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: sundate-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://api:5001
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - sundate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Documentation Site
  docs:
    build:
      context: ./apps/docs
      dockerfile: Dockerfile
    container_name: sundate-docs
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
    ports:
      - "3001:3001"
    networks:
      - sundate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: sundate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - docs
      - api
    networks:
      - sundate-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  sundate-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
